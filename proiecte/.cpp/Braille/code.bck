// Braille.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include "const.h"

std::ifstream fin(INPUT_FILE);
std::ofstream fout(OUTPUT_FILE);

std::vector<std::vector<char> > letter;
std::vector<char> print1;
std::vector<char> print2;
std::vector<char> print3;
std::string stringPrint;

void print(std::vector<char> _print1, std::vector<char> _print2, std::vector<char> _print3);

int main()
{
    if (!fin.is_open()) {
        std::cerr << "File '" << INPUT_FILE << "' couldn't be opend or it doesn't exist";
        return 1;
    }

    char cc = 0; // current character
    while (fin.get(cc))
    {
        switch (cc)
        {
        case 'A':
            letter = l_A;
            break;
        case 'B':
            letter = l_B;
            break;
        case 'C':
            letter = l_C;
            break;
        case ' ':
            letter = l_space;
            break;
        case '\n':
            print(print1, print2, print3);
            std::cout << '\n';
            print1.clear();
            print2.clear();
            print3.clear();
            break;
        default:
            break;
        }

        if (cc != '\n')
        {
            for (size_t i = 0; i < 3; i++)
            {
                print1.push_back(letter[0][i]);
                print2.push_back(letter[1][i]);
                print3.push_back(letter[2][i]);
            }
        }
    }

    return 0;
}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file

void print(std::vector<char> _print1, std::vector<char> _print2, std::vector<char> _print3)
{
    for (size_t i = 0; i < _print1.size(); i++)
    {
        stringPrint += _print1[i];
    }
    stringPrint += '\n';
    for (size_t i = 0; i < _print2.size(); i++)
    {
        stringPrint += _print2[i];
    }
    stringPrint += '\n';
    for (size_t i = 0; i < _print3.size(); i++)
    {
        stringPrint += _print3[i];
    }
    std::cout << stringPrint;
    stringPrint = "";
}























// Braille.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include "const.h"

std::ifstream fin(INPUT_FILE);
std::ofstream fout(OUTPUT_FILE);

std::vector<std::vector<char> > letter;
std::vector<char> print1;
std::vector<char> print2;
std::vector<char> print3;
std::string stringPrint;

void print(std::vector<char> _print1, std::vector<char> _print2, std::vector<char> _print3);

int main()
{
    if (!fin.is_open()) {
        std::cerr << "File '" << INPUT_FILE << "' couldn't be opend or it doesn't exist";
        return 1;
    }

    char cc = 0; // current character
    while (fin.get(cc))
    {
        switch (cc)
        {
        case 'A':
            letter = l_A;
            break;
        case 'B':
            letter = l_B;
            break;
        case 'C':
            letter = l_C;
            break;
        case ' ':
            letter = l_space;
            break;
        case '\n':
            print(print1, print2, print3);
            print1.clear();
            print2.clear();
            print3.clear();
            break;
        default:
            break;
        }

        if (cc != '\n')
        {
            for (size_t i = 0; i < 3; i++)
            {
                print1.push_back(letter[0][i]);
                print2.push_back(letter[1][i]);
                print3.push_back(letter[2][i]);
            }
        }
    }

    print(print1, print2, print3);
    /* If there is a bug, uncomment this
    print1.clear();
    print2.clear();
    print3.clear();
    */
    return 0;
}

void print(std::vector<char> _print1, std::vector<char> _print2, std::vector<char> _print3)
{
    for (size_t i = 0; i < _print1.size(); i++)
    {
        stringPrint += _print1[i];
    }
    stringPrint += '\n';
    for (size_t i = 0; i < _print2.size(); i++)
    {
        stringPrint += _print2[i];
    }
    stringPrint += '\n';
    for (size_t i = 0; i < _print3.size(); i++)
    {
        stringPrint += _print3[i];
    }
    stringPrint += '\n';
    std::cout << stringPrint;
    stringPrint = "";
}
